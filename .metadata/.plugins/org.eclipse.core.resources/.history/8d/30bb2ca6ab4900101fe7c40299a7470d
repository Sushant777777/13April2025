package com.google.graph.last.revision.part.two;

import java.util.ArrayList;
import java.util.Stack;

public class KosarajusAlgo {
	static class Edge {
		int src;
		int det;

		public Edge(int src, int det) {
			super();
			this.src = src;
			this.det = det;
		}

	}

	public static void createGraph(ArrayList<Edge> graph[]) {

		for (int i = 0; i < graph.length; i++) {
			graph[i] = new ArrayList<Edge>();
		}

		graph[0].add(new Edge(0, 2));
		graph[0].add(new Edge(0, 3));

		graph[1].add(new Edge(1, 0));

		graph[2].add(new Edge(2, 1));

		graph[3].add(new Edge(3, 4));

	}

	public static void kosarajuAlgo(ArrayList<Edge> graph[], int v) {

		Stack<Integer> stack = new Stack<Integer>();

		boolean vis[] = new boolean[v];

		for (int i = 0; i < v; i++) {
			if (!vis[i]) {
				topSort(graph, i, vis, stack);
			}
		}
	}

	private static void topSort(ArrayList<Edge>[] graph, int i, boolean[] vis, Stack<Integer> stack) {
		// TODO Auto-generated method stub
		
	}

	public static void main(String[] args) {
		int V = 5;
		ArrayList<Edge> graph[] = new ArrayList[V];

		createGraph(graph);
	}
}
